# jsonschema: |
#   {
#     "$schema": "http://json-schema.org/draft-07/schema#",
#     "type": "array",
#     "items": {
#       "type": "object",
#       "required": ["id","description","dependencies","priority","status"],
#       "properties": {
#         "id": {"type": "integer"},
#         "description": {"type": "string"},
#         "component": {"type": "string"},
#         "dependencies": {"type": "array","items": {"type": "integer"}},
#         "priority": {"type": "integer","minimum": 1, "maximum": 5},
#         "status": {"type": "string","enum": ["pending","in_progress","done"]},
#         "command": {"type": ["string", "null"]},
#         "task_id": {"type": "string"},
#         "title": {"type": "string"},
#         "area": {"type": "string"},
#         "actionable_steps": {"type": "array", "items": {"type": "string"}},
#         "acceptance_criteria": {"type": "array", "items": {"type": "string"}},
#         "assigned_to": {"type": ["string", "null"]},
#         "epic": {"type": "string"}
#       }
#     }
#   }
- id: 1
  description: Implement YAML validation using jsonschema
  dependencies: []
  priority: 1
  status: done
  area: bootstrap
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 2
  description: Expand tests in tests/test_bootstrap.py
  dependencies:
  - 1
  priority: 2
  status: done
  area: testing
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 3
  description: Create AGENTS.md with repository guidelines for Codex
  dependencies: []
  priority: 3
  status: done
  area: docs
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 4
  description: Ensure tests check for AGENTS.md existence
  dependencies:
  - 3
  priority: 4
  status: done
  area: testing
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 5
  description: Implement Orchestrator skeleton
  dependencies: []
  priority: 1
  status: done
  area: orchestrator
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 6
  description: Introduce Memory module
  dependencies:
  - 5
  priority: 2
  status: done
  area: core
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 7
  description: Provide CLI entrypoint
  dependencies:
  - 5
  - 6
  priority: 3
  status: done
  area: cli
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 8
  description: Expand bootstrap error tests
  dependencies:
  - 2
  priority: 4
  status: done
  area: testing
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 9
  description: Implement SelfAuditor skeleton using radon metrics
  dependencies: []
  priority: 2
  status: done
  area: auditor
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 12
  description: Add radon dependency to requirements
  dependencies:
  - 9
  priority: 2
  status: done
  area: auditor
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 13
  description: Implement analyze() in SelfAuditor using radon APIs
  dependencies:
  - 12
  priority: 2
  status: done
  area: auditor
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 14
  description: Implement audit() generating refactor tasks when thresholds exceeded
  dependencies:
  - 13
  priority: 3
  status: done
  area: auditor
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 15
  description: Add unit tests for SelfAuditor analyze and audit methods
  dependencies:
  - 14
  priority: 3
  status: done
  area: testing
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 10
  description: Integrate wily history tracking into SelfAuditor
  dependencies:
  - 9
  priority: 3
  status: done
  area: auditor
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 11
  description: Orchestrator generates refactor tasks when SelfAuditor thresholds exceeded
  dependencies:
  - 9
  priority: 2
  status: done
  area: orchestrator
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 16
  description: Document Reflector component and self-improvement loop in ARCHITECTURE.md
  dependencies:
  - 5
  priority: 2
  status: done
  area: docs
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 17
  description: Add Reflector class skeleton with reflect, analyze, decide, execute
    and validate methods
  dependencies:
  - 16
  priority: 2
  status: done
  area: reflector
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 18
  description: Implement decision logic in Reflector to update tasks.yml based on
    analysis
  dependencies:
  - 17
  priority: 3
  status: done
  area: reflector
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 19
  description: Integrate Reflector into Orchestrator run loop
  dependencies:
  - 17
  priority: 3
  status: done
  area: orchestrator
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 20
  description: Add unit tests for Reflector and its orchestration integration
  dependencies:
  - 18
  - 19
  priority: 3
  status: done
  area: testing
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 21
  description: Remove duplicate entries and complete missing fields in tasks.yml
  dependencies: []
  priority: 2
  status: done
  area: docs
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 22
  description: Fix flake8 lint errors across code and tests
  dependencies: []
  priority: 3
  status: done
  area: code
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 23
  description: Increase test coverage for bootstrap functions
  dependencies: []
  priority: 3
  status: done
  area: tests
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 24
  description: Add missing module docstrings across core modules
  dependencies: []
  priority: 2
  status: done
  area: docs
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 25
  description: Set up GitHub Actions workflow to run pytest and pylint
  dependencies: []
  priority: 2
  status: done
  area: ci
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 26
  description: Configure flake8 and pre-commit for code style enforcement
  dependencies: []
  priority: 3
  status: done
  area: deps
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 27
  description: Pin wily dependency in requirements.txt
  dependencies: []
  priority: 2
  status: done
  area: deps
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 28
  description: Implement analyze() in SelfAuditor using radon
  dependencies:
  - 13
  priority: 3
  status: done
  area: code
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 29
  description: Add tests covering SelfAuditor.analyze and audit
  dependencies:
  - 28
  priority: 3
  status: done
  area: tests
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 30
  description: Add load_tasks and save_tasks methods to Memory for YAML task persistence
  dependencies: []
  priority: 2
  status: done
  area: core
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 31
  description: Print 'Orchestrator running' message from CLI main
  dependencies:
  - 30
  priority: 3
  status: done
  area: cli
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 32
  description: Ensure CLI integration test passes with new Memory methods
  dependencies:
  - 31
  priority: 3
  status: done
  area: tests
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 33
  description: Refactor core/reflector.py complexity 24
  dependencies: []
  priority: 3
  status: pending
  area: core
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 34
  description: Refactor core/bootstrap.py complexity 15
  dependencies: []
  priority: 3
  status: pending
  area: core
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 35
  description: Refactor core/orchestrator.py complexity 13
  dependencies: []
  priority: 3
  status: pending
  area: core
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 36
  description: Refactor core/planner.py complexity 35
  dependencies: []
  priority: 3
  status: pending
  area: core
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 37
  description: Refactor tests/test_executor.py complexity 13
  dependencies: []
  priority: 3
  status: pending
  area: core
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 38
  description: Refactor tests/test_bootstrap.py complexity 12
  dependencies: []
  priority: 3
  status: pending
  area: core
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 39
  description: Refactor tests/test_planner.py complexity 23
  dependencies: []
  priority: 3
  status: pending
  area: core
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 40
  description: Deduplicate tasks 33-53 in tasks.yml
  dependencies: []
  priority: 1
  status: done
  area: docs
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 41
  description: Add task schema validation to Memory.load_tasks
  dependencies:
  - 30
  priority: 2
  status: done
  area: core
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 42
  description: Implement conflict detection for duplicate ids in Planner
  dependencies: []
  priority: 3
  status: done
  area: core
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 43
  description: Add tests for Memory task helpers and Planner conflict detection
  dependencies:
  - 41
  - 42
  priority: 2
  status: done
  area: tests
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 48
  description: Refactor core/planner.py complexity 41
  dependencies: []
  priority: 3
  status: pending
  area: core
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 51
  description: Clean up 5 duplicate tasks
  dependencies: []
  priority: 2
  status: done
  metadata:
    type: technical_debt
    generated_by: Reflector
    decision_type: task_cleanup
    details:
      type: task_cleanup
      reason: Duplicate tasks detected
      duplicates:
      - description: Refactor core/reflector.py complexity 24
        task_ids:
        - 33
        - 50
      - description: Refactor core/bootstrap.py complexity 15
        task_ids:
        - 34
        - 47
      - description: Refactor core/orchestrator.py complexity 13
        task_ids:
        - 35
        - 49
      - description: Refactor tests/test_bootstrap.py complexity 12
        task_ids:
        - 38
        - 44
      - description: Refactor tests/test_executor.py complexity 13
        task_ids:
        - 37
        - 46
  area: maintenance
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 53
  description: Document strategic research roadmap (RB-002)
  dependencies: []
  priority: 2
  status: done
  area: docs
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 54
  description: Outline Vision Engine prioritization research
  dependencies:
  - 53
  priority: 3
  status: pending
  area: research
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 55
  description: Outline cross-language architecture research
  dependencies:
  - 53
  priority: 3
  status: pending
  area: research
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 56
  description: Outline metrics and observability research
  dependencies:
  - 53
  priority: 3
  status: pending
  area: research
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 57
  description: Outline plugin governance research
  dependencies:
  - 53
  priority: 3
  status: pending
  area: research
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 58
  description: Outline ethical sentinel policy research
  dependencies:
  - 53
  priority: 3
  status: pending
  area: research
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 59
  description: Outline self-improvement optimization research
  dependencies:
  - 53
  priority: 3
  status: pending
  area: research
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 60
  description: Outline community and ecosystem mapping research
  dependencies:
  - 53
  priority: 3
  status: pending
  area: research
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 61
  description: Implement Experience Replay Buffer for PPO agent
  dependencies: []
  priority: 2
  status: pending
  area: reflector
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 62
  description: Integrate Elastic Weight Consolidation in training loop
  dependencies:
  - 61
  priority: 3
  status: pending
  area: reflector
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 63
  description: Build state representation vector using observability data
  dependencies: []
  priority: 2
  status: pending
  area: reflector
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 64
  description: Implement generative action space via fine-tuned code LLM
  dependencies:
  - 63
  priority: 3
  status: pending
  area: reflector
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 65
  description: Design composite reward function balancing correctness and performance
  dependencies:
  - 63
  priority: 2
  status: pending
  area: reflector
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 66
  description: Develop PPO agent with actor-critic architecture
  dependencies:
  - 61
  - 63
  - 65
  priority: 2
  status: pending
  area: reflector
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 67
  description: Implement Evolutionary Policy Optimization outer loop
  dependencies:
  - 66
  priority: 3
  status: pending
  area: reflector
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 68
  description: Define gene structure for outer loop agent variation
  dependencies:
  - 67
  priority: 3
  status: pending
  area: reflector
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 69
  description: Create high-fidelity simulation environment for code changes
  dependencies: []
  priority: 2
  status: pending
  area: infrastructure
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 70
  description: Integrate two-speed architecture connecting inner and outer loops
  dependencies:
  - 67
  - 69
  priority: 2
  status: pending
  area: reflector
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 71
  description: Develop standardized benchmarking suite for agent evaluation
  dependencies: []
  priority: 3
  status: pending
  area: tests
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 72
  description: Implement continuous improvement dashboard for key metrics
  dependencies: []
  priority: 3
  status: pending
  area: docs
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 73
  description: Define plugin APIs, isolation model, and threat analysis
  dependencies: []
  priority: 3
  status: pending
  area: plugins
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 74
  description: Document plugin governance requirements and dependency controls
  dependencies:
  - 73
  priority: 3
  status: pending
  area: docs
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 75
  description: Add SAST, SCA, secret scanning, and compliance checks in CI/CD
  dependencies: []
  priority: 2
  status: pending
  area: ci
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 76
  description: Enforce cryptographic signing before plugin marketplace publication
  dependencies:
  - 75
  priority: 2
  status: pending
  area: ci
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 77
  description: Build example first-party plugins (e.g., tech debt analyzer)
  dependencies:
  - 73
  - 75
  priority: 3
  status: pending
  area: plugins
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 78
  description: Validate plugin architecture and CI pipeline with first-party plugins
  dependencies:
  - 77
  priority: 3
  status: pending
  area: plugins
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 79
  description: Instrument all components with OpenTelemetry for metrics, logs, and
    traces
  dependencies: []
  priority: 3
  status: done
  area: observability
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 80
  description: Store metrics in Prometheus and define Grafana dashboards as code
  dependencies:
  - 79
  priority: 3
  status: done
  area: observability
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 81
  description: Feed collected metrics to Reflector as its reward signal
  dependencies:
  - 79
  priority: 3
  status: done
  area: reflector
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 82
  description: Introduce Rust modules via PyO3 for performance-critical code
  dependencies: []
  priority: 3
  status: pending
  area: microservices
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 83
  description: Add Node.js services for I/O-bound tasks and coordinate via gRPC
  dependencies:
  - 82
  priority: 3
  status: in_progress
  area: microservices
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 84
  description: Apply API Gateway and Database-per-Service patterns
  dependencies:
  - 82
  - 83
  priority: 3
  status: pending
  area: microservices
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 85
  description: Ensure all microservices integrate with standardized OTel and security
    tooling
  dependencies:
  - 79
  - 82
  - 83
  priority: 3
  status: done
  area: observability
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 86
  description: Implement Vision Engine prioritization using WSJF heuristics
  dependencies: []
  priority: 3
  status: done
  area: vision
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 87
  description: Train RL-based Vision Engine in shadow mode and gradually delegate
    control
  dependencies:
  - 86
  priority: 3
  status: done
  area: vision
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 88
  description: Build fast PPO-aligned Reflector inner loop for continuous improvement
  dependencies: []
  priority: 2
  status: pending
  area: reflector
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 89
  description: Develop evolutionary outer loop for architectural search
  dependencies:
  - 88
  priority: 3
  status: pending
  area: reflector
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 90
  description: Contribute integration guides and sample code to frameworks like LangChain
    and CrewAI
  dependencies: []
  priority: 3
  status: pending
  area: docs
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 91
  description: Foster developer community to encourage adoption of AI-SWA
  dependencies:
  - 90
  priority: 3
  status: pending
  area: community
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 92
  description: Document hybrid Vision Engine design and rollout plan
  dependencies:
  - 86
  - 87
  priority: 3
  status: done
  area: docs
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 93
  description: Extend WSJF scoring with CLI support and tests
  dependencies:
  - 86
  priority: 3
  status: done
  area: vision
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 94
  description: Implement RL training pipeline using observability metrics
  dependencies:
  - 87
  - 85
  priority: 3
  status: done
  area: vision
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 95
  description: Run RL agent in shadow mode and log suggestions
  dependencies:
  - 94
  priority: 3
  status: done
  area: vision
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 96
  description: Gradually enable RL authority based on performance gains
  dependencies:
  - 95
  priority: 3
  status: pending
  area: vision
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 97
  description: Define gRPC contract for Node IOService
  dependencies:
  - 83
  priority: 3
  status: done
  area: microservices
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 98
  description: Implement Node.js gRPC IOService server
  dependencies:
  - 97
  priority: 3
  status: done
  area: microservices
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 99
  description: Implement Python gRPC client for IOService
  dependencies:
  - 97
  priority: 3
  status: done
  area: microservices
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 100
  description: Add integration tests for Node IOService communication
  dependencies:
  - 98
  - 99
  priority: 3
  status: done
  area: testing
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 101
  description: Document Node microservice setup in ARCHITECTURE.md
  dependencies:
  - 98
  - 99
  priority: 3
  status: done
  area: docs
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 102
  description: Add reflective critique layer to Evaluator
  dependencies: []
  priority: 3
  status: pending
  area: evaluator
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 103
  description: Expand memory reconciliation mechanism
  dependencies:
  - 102
  priority: 3
  status: pending
  area: memory
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 104
  description: Sandbox isolation for Tool-Runner
  dependencies: []
  priority: 3
  status: pending
  area: executor
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 105
  description: Introduce Planner cost budgeting
  dependencies:
  - 104
  priority: 3
  status: pending
  area: planner
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 106
  description: Semantic search for Researcher agent
  dependencies: []
  priority: 3
  status: pending
  area: research
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 107
  description: Observer metrics dashboard
  dependencies: []
  priority: 3
  status: pending
  area: observability
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 108
  description: Increase test coverage for the Reflector component
  dependencies: []
  priority: 2
  status: pending
  area: testing
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 109
  description: Increase test coverage for the Orchestrator component
  dependencies: []
  priority: 2
  status: pending
  area: testing
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 110
  description: Implement more robust error handling in the Orchestrator
  dependencies: []
  priority: 2
  status: pending
  area: orchestrator
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 111
  description: Implement authentication and authorization for the broker API
  dependencies: []
  priority: 1
  status: pending
  area: security
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 112
  description: Consolidate application configuration into a single file
  dependencies: []
  priority: 3
  status: pending
  area: configuration
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 113
  description: Add more detailed logging to the core components
  dependencies: []
  priority: 3
  status: pending
  area: logging
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 114
  description: Create a more comprehensive set of unit tests for the Vision Engine
  dependencies: []
  priority: 2
  status: pending
  area: testing
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 115
  description: Add end-to-end tests for the entire AI-SWA system
  dependencies: []
  priority: 1
  status: pending
  area: testing
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 116
  description: Implement a more sophisticated security model for the plugin architecture
  dependencies: []
  priority: 1
  status: pending
  area: security
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 117
  description: Create a more detailed roadmap for the project
  dependencies: []
  priority: 2
  status: pending
  area: documentation
  actionable_steps: []
  acceptance_criteria: []
  assigned_to: null
  epic: Legacy
- id: 118
  task_id: OBS-001
  title: Standardize logging configuration
  description: Implement a centralized logging configuration shared by all Python
    services
  area: observability
  actionable_steps:
  - Replace print statements with logging calls in core modules
  - Create a logging configuration file with formatters and handlers
  - Update services to load the configuration on startup
  dependencies: []
  priority: 2
  acceptance_criteria:
  - Logs from orchestrator, worker, and broker follow the same format
  - No print statements remain in core modules
  status: pending
  assigned_to: null
  epic: Observability Improvements
- id: 119
  task_id: WORK-ASYNC
  title: Enable concurrent task execution in worker
  description: Refactor the worker to process tasks concurrently using asyncio or
    threading
  area: worker
  actionable_steps:
  - Benchmark current worker throughput
  - Implement asynchronous fetching and execution loop
  - Write tests to verify multiple tasks are handled in parallel
  dependencies: []
  priority: 2
  acceptance_criteria:
  - Worker can execute at least two tasks concurrently in tests
  - Existing functionality remains intact
  status: pending
  assigned_to: null
  epic: Performance Enhancements
- id: 120
  task_id: NODE-HC
  title: Add health check endpoint to Node IO service
  description: Provide a simple HTTP endpoint to report service health
  area: services
  actionable_steps:
  - Expose an express HTTP server alongside gRPC service
  - Return status information such as uptime
  - Add basic test verifying health endpoint
  dependencies: []
  priority: 2
  acceptance_criteria:
  - GET /health returns 200 with JSON status
  status: pending
  assigned_to: null
  epic: Reliability
- id: 121
  task_id: MEM-EXT
  title: Extend Memory module for expanded task schema
  description: Update Memory.load_tasks and save_tasks to preserve additional fields
    beyond the base schema
  area: core
  actionable_steps:
  - Modify dataclass Task to store optional metadata dictionary
  - Adjust JSON schema to allow extra keys
  - Update tests for new behavior
  dependencies:
  - 118
  priority: 2
  acceptance_criteria:
  - Additional fields in tasks.yml round-trip without loss
  - Tests cover backward compatibility
  status: pending
  assigned_to: null
  epic: Schema Evolution
- id: 122
  task_id: DOC-ENV
  title: Document environment variables and configuration
  description: Provide a dedicated section in README explaining all configuration
    options
  area: documentation
  actionable_steps:
  - List required and optional environment variables
  - Add examples of configuration files
  - Update architecture docs with configuration flow
  dependencies: []
  priority: 2
  acceptance_criteria:
  - README contains new Configuration section
  status: pending
  assigned_to: null
  epic: Documentation
- id: 123
  task_id: INT-TESTS
  title: Add integration tests for microservice workflow
  description: Validate end-to-end task processing across orchestrator, broker, worker, and Node I/O service.
  area: testing
  actionable_steps:
    - Spin up broker, worker, and Node service in test environment
    - Send tasks through broker API and assert worker completion
    - Verify outputs via REST/gRPC responses
  dependencies:
    - 115
  acceptance_criteria:
    - Full workflow test passes with broker, worker, and Node service running
    - Failure cases are logged and handled gracefully
  status: done
  assigned_to: null
  epic: Reliability
- id: 124
  task_id: ORCH-CLI
  title: Provide CLI wrapper for Orchestrator
  description: Add command-line interface with options for starting, stopping, and inspecting the orchestrator loop.
  area: core
  actionable_steps:
    - Implement CLI using argparse or click
    - Support configuration file path and verbosity flags
    - Write usage documentation and tests
  dependencies: []
  acceptance_criteria:
    - "`python -m ai_swa.orchestrator --help` shows CLI options"
    - Start/stop commands function as expected in tests
  status: done
  assigned_to: null
  epic: Usability
- id: 125
  task_id: METRICS-PROM
  title: Expose Prometheus metrics for broker and worker
  description: Instrument broker and worker services with metrics endpoints for monitoring.
  area: observability
  actionable_steps:
    - Add Prometheus client library to services
    - Define metrics for task counts and processing duration
    - Document how to scrape metrics
  dependencies: []
  acceptance_criteria:
    - "`/metrics` endpoint available on broker and worker"
    - Metrics include task throughput and duration
  status: done
  assigned_to: null
  epic: Observability Improvements
- id: 126
  task_id: TASK-VALID
  title: Validate tasks.yml against extended schema
  description: Ensure that additional fields introduced in new tasks are validated on load.
  area: core
  actionable_steps:
    - Update JSON schema in code to allow extra keys
    - Modify Memory.load_tasks to run validation
    - Add tests for invalid and valid schemas
  dependencies:
    - 121
  acceptance_criteria:
    - Loading tasks fails with clear error when schema violations occur
    - Extended fields round-trip without loss
  status: done
  assigned_to: null
  epic: Schema Evolution
- id: 127
  task_id: DOCKER-LOCAL
  title: Provide Docker Compose configuration
  description: Set up Docker containers for orchestrator, broker, worker, and Node service for easy local deployment.
  area: infrastructure
  actionable_steps:
    - Write Dockerfiles for Python services if missing
    - Create `docker-compose.yml` orchestrating all services
    - Document usage in README
  dependencies: []
  acceptance_criteria:
    - "`docker-compose up` starts all services and tests can run against them"
    - README contains updated instructions
  status: done
  assigned_to: null
  epic: Developer Experience

- id: 128
  description: Review integration tests for microservice workflow
  dependencies:
  - 123
  priority: 3
  status: pending
  area: review
  actionable_steps:
  - Ensure tests cover broker, worker and Node service interactions
  - Document any missing coverage or flaky behavior
  acceptance_criteria:
  - All services interact successfully in review environment
  assigned_to: null
  epic: Reliability

- id: 129
  description: Review CLI wrapper for Orchestrator
  dependencies:
  - 124
  priority: 3
  status: pending
  area: review
  actionable_steps:
  - Verify start and stop commands work as documented
  - Confirm help text matches README examples
  acceptance_criteria:
  - CLI behaves consistently across platforms
  assigned_to: null
  epic: Usability

- id: 130
  description: Review Prometheus metrics endpoints
  dependencies:
  - 125
  priority: 3
  status: pending
  area: review
  actionable_steps:
  - Check broker and worker expose /metrics
  - Validate task throughput and duration metrics
  acceptance_criteria:
  - Metrics scrape successfully with Prometheus
  assigned_to: null
  epic: Observability Improvements

- id: 131
  description: Review tasks.yml schema validation implementation
  dependencies:
  - 126
  priority: 3
  status: pending
  area: review
  actionable_steps:
  - Load tasks.yml with Memory module and check for errors
  - Confirm extended fields are preserved on save
  acceptance_criteria:
  - Schema validation passes in unit tests
  assigned_to: null
  epic: Schema Evolution

- id: 132
  description: Review Docker Compose configuration for local deployment
  dependencies:
  - 127
  priority: 3
  status: pending
  area: review
  actionable_steps:
  - Run docker-compose up and verify all services start
  - Document any setup issues in README
  acceptance_criteria:
  - Local deployment instructions work for new contributors
  assigned_to: null
  epic: Developer Experience

- id: 133
  task_id: WORK-002
  title: Implement Scalable Worker Queue
  description: Refactor the worker to use a scalable queueing system instead of fetching all tasks
  area: microservices
  actionable_steps:
  - Research suitable queueing technologies (e.g., RabbitMQ, Redis Queues).
  - Refactor broker API to support a task queue (e.g., GET /tasks/next).
  - Update worker logic to pull single tasks from the queue.
  dependencies:
  - 83
  acceptance_criteria:
  - Multiple workers can run concurrently without processing the same task.
  - Broker ensures tasks are distributed atomically.
  priority: 2
  status: pending
  assigned_to: null
  epic: Reliability

- id: 134
  task_id: VIS-001
  title: Build and Integrate RL Prioritization Agent
  description: Implement the Reinforcement Learning agent for the Vision Engine
  area: vision
  actionable_steps:
  - Implement the PPO agent architecture as described in research docs.
  - Develop the composite reward function using metrics from the observability pipeline.
  - Integrate the agent into the VisionEngine to refine WSJF scores.
  - Run the agent in shadow mode initially, logging its decisions.
  dependencies:
  - 96
  - 81
  acceptance_criteria:
  - The RL agent can be trained on historical data from the observability pipeline.
  - In shadow mode, the agent's suggested rankings are logged for analysis.
  priority: 1
  status: pending
  assigned_to: null
  epic: Vision Engine RL

- id: 135
  task_id: SEC-001
  title: Implement Automated Plugin Vetting and Signing
  description: Build the automated Plugin Certification Pipeline
  area: security
  actionable_steps:
  - Integrate SCA tools (e.g., Snyk) into the CI pipeline for dependency and license scanning.
  - Integrate SAST tools (e.g., Semgrep) for static code analysis.
  - Add a sandboxed environment to the pipeline for dynamic behavioral testing of plugins.
  - Implement the dual-signing process where the pipeline cryptographically signs certified plugins.
  dependencies:
  - 76
  - 78
  acceptance_criteria:
  - A submitted plugin automatically triggers the multi-stage scanning pipeline.
  - Plugins with security vulnerabilities or license violations fail the build.
  - Successfully vetted plugins are automatically signed by the marketplace key.
  priority: 1
  status: pending
  assigned_to: null
  epic: Ecosystem

- id: 136
  task_id: ETH-001
  title: Develop Ethical Sentinel Agent
  description: Implement the Ethical Sentinel agent and its policy framework
  area: governance
  actionable_steps:
  - Create the core Ethical Sentinel agent class.
  - Implement the policy template as a machine-readable schema (e.g., JSON Schema).
  - Develop logic for the Sentinel to load policies and check agent actions against them.
  - Integrate the Sentinel as a pre-execution check in the Orchestrator.
  dependencies:
  - 15
  acceptance_criteria:
  - The Sentinel can block an action that violates a defined policy.
  - Policy violations are logged to a dedicated audit stream.
  priority: 2
  status: pending
  assigned_to: null
  epic: Governance

- id: 137
  task_id: REF-002
  title: Implement Real System Health and Trend Analysis in Reflector
  description: Flesh out the Reflector's analysis capabilities
  area: reflector
  actionable_steps:
  - Replace placeholder logic in _analyze_system_health with real checks.
  - Implement _analyze_evolution_trends by consuming historical data from the observability pipeline.
  - Connect the results of these analyses to the decision-making engine.
  dependencies:
  - 33
  - 81
  acceptance_criteria:
  - The Reflector can generate insights based on actual test coverage and dependency health data.
  - The Reflector can identify if code complexity is trending up or down over time.
  priority: 2
  status: pending
  assigned_to: null
  epic: Reflector Outer Loop

