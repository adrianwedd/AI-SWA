name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.lock
      - name: Install pip-audit
        run: pip install pip-audit==2.9.0
      - name: Run pip-audit
        run: |
          pip-audit -r requirements.lock -f json -o pip-audit.json
      - name: Fail on vulnerabilities
        run: |
          python - <<'EOF'
import json, sys
with open('pip-audit.json') as f:
    data = json.load(f)
count = sum(len(d.get('vulns', [])) for d in data.get('dependencies', []))
if count:
    print(f"{count} vulnerabilities found")
    sys.exit(1)
EOF
      - name: Upload pip-audit report
        uses: actions/upload-artifact@v3
        with:
          name: pip-audit-report
          path: pip-audit.json
      - name: Build Docker images
        run: docker compose -f docker-compose.yml build
      - name: Install pylint
        run: pip install pylint==3.3.7
      - name: Run pylint
        run: |
          pylint --exit-zero core tests
      - name: Install Snyk
        run: npm install -g snyk
      - name: Snyk dependency and license scan
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk test --file=requirements.lock
      - name: Install Semgrep
        run: pip install semgrep==1.62.0
      - name: Run Semgrep
        run: semgrep --config auto --error
      - name: Run Bandit
        run: |
          bandit -r core plugins -x tests -f json -o bandit.json
      - name: Fail on Bandit high-severity findings
        run: |
          python - <<'EOF'
import json, sys
with open('bandit.json') as f:
    data = json.load(f)
highs = [r for r in data.get('results', []) if r.get('issue_severity') == 'HIGH']
if highs:
    print(f"{len(highs)} high-severity issues found")
    sys.exit(1)
EOF
      - name: Upload Bandit report
        uses: actions/upload-artifact@v3
        with:
          name: bandit-report
          path: bandit.json
      - name: Run plugin tests in sandbox
        run: |
          docker run --rm -v $(pwd):/app:ro --network none -w /app python:3.12-slim \
            bash -c "pip install -r requirements.lock && pytest tests/test_plugin_security.py"
      - name: Run tests
        run: |
          pytest --maxfail=1 --disable-warnings -q
      - name: Package example plugin
        run: python scripts/package_plugin.py plugins/example_plugin
      - name: Sign plugin artifact
        env:
          COSIGN_EXPERIMENTAL: '1'
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        run: |
          cosign sign-blob --key ${{ secrets.COSIGN_KEY }} dist/example-0.1.0.zip > dist/example-0.1.0.zip.sig
      - name: Upload plugin artifacts
        uses: actions/upload-artifact@v3
        with:
          name: signed-plugin
          path: dist/example-0.1.0.zip*
