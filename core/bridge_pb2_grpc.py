# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings
import os

import bridge_pb2 as bridge__pb2

GRPC_GENERATED_VERSION = '1.73.1'
GRPC_VERSION = grpc.__version__ if not os.environ.get("DISABLE_GRPC_VERSION_CHECK") else GRPC_GENERATED_VERSION
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except Exception:
    _version_not_supported = False

if _version_not_supported:
    warnings.warn(
        'gRPC version mismatch: ' + GRPC_VERSION + ' expected ' + GRPC_GENERATED_VERSION,
        RuntimeWarning,
    )


class BridgeStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Reverse = channel.unary_unary(
                '/aiswa.Bridge/Reverse',
                request_serializer=bridge__pb2.ReverseRequest.SerializeToString,
                response_deserializer=bridge__pb2.ReverseReply.FromString,
                _registered_method=True)


class BridgeServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Reverse(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BridgeServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Reverse': grpc.unary_unary_rpc_method_handler(
                    servicer.Reverse,
                    request_deserializer=bridge__pb2.ReverseRequest.FromString,
                    response_serializer=bridge__pb2.ReverseReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'aiswa.Bridge', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('aiswa.Bridge', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Bridge(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Reverse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/aiswa.Bridge/Reverse',
            bridge__pb2.ReverseRequest.SerializeToString,
            bridge__pb2.ReverseReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
